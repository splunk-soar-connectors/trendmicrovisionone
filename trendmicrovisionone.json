{
    "appid": "f36c99d8-16ed-4b65-be03-d93511d721dd",
    "name": "Trend Vision One for Splunk SOAR",
    "description": "Trend Vision One is a purpose-built threat defense platform that provides added value and new benefits beyond XDR solutions, allowing you to see more and respond faster. Providing deep and broad extended detection and response (XDR) capabilities that collect and automatically correlate data across multiple security layers\u2014email, endpoints, servers, cloud workloads, and networks\u2014Trend Vision One prevents the majority of attacks with automated protection",
    "type": "endpoint",
    "product_vendor": "Trend Micro",
    "logo": "logo_trendmicrovisionone.svg",
    "logo_dark": "logo_trendmicrovisionone_dark.svg",
    "product_name": "VisionOne",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Trend Micro",
    "license": "Copyright (c) Trend Micro, 2022-2023",
    "app_version": "2.2.0",
    "utctime_updated": "2023-05-20T10:58:51.000000Z",
    "package_name": "phantom_trendmicrovisionone",
    "main_module": "trendmicrovisionone_connector.py",
    "min_phantom_version": "5.5.0",
    "app_wizard_version": "1.0.0",
    "fips_compliant": false,
    "configuration": {
        "api_url": {
            "description": "Vision One API URL (e.g. https://api.xdr.trendmicro.com)",
            "data_type": "string",
            "required": true,
            "default": "https://api.xdr.trendmicro.com",
            "order": 0
        },
        "api_key": {
            "description": "Vision One API Token",
            "data_type": "password",
            "required": true,
            "order": 1
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "Validate the asset configuration for connectivity using supplied configuration.",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get endpoint info",
            "identifier": "get_endpoint_info",
            "description": "Gather information about an endpoint",
            "verbose": "Gather information about an endpoint.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "ip_hostname_mac": {
                    "description": "Hostname/IP/MAC/AgentGuid of the endpoint(s) to query. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ip",
                        "mac address",
                        "host name",
                        "agent guid"
                    ],
                    "order": 0
                },
                "query_op": {
                    "description": "Query Operator. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "query op"
                    ],
                    "value_list": [
                        "and",
                        "or"
                    ],
                    "default": "or",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ip_hostname_mac",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "mac address",
                        "host name",
                        "agent guid"
                    ]
                },
                {
                    "data_path": "action_result.parameter.query_op",
                    "data_type": "string",
                    "contains": [
                        "query op"
                    ]
                },
                {
                    "data_path": "action_result.data.*.agent_guid",
                    "data_type": "string",
                    "contains": [
                        "agent guid"
                    ],
                    "column_name": "Agent Guid",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.endpoint_name.value",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ],
                    "column_name": "Endpoint Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.installed_product_codes",
                    "data_type": "string",
                    "column_name": "Installed Product Codes",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.ip.value",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "column_name": "IP",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.login_account.value",
                    "data_type": "string",
                    "column_name": "Login Account",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.mac_address.value",
                    "data_type": "string",
                    "contains": [
                        "mac address"
                    ],
                    "column_name": "Mac Address",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.os_description",
                    "data_type": "string",
                    "column_name": "OS Description",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.os_name",
                    "data_type": "string",
                    "column_name": "OS Name",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.os_version",
                    "data_type": "string",
                    "column_name": "OS Version",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.data.*.product_code",
                    "data_type": "string",
                    "column_name": "Product Code",
                    "column_order": 9
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "quarantine device",
            "identifier": "quarantine_device",
            "description": "Quarantine the endpoint",
            "verbose": "Quarantine the endpoint.",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "endpoint_identifiers": {
                    "description": "Object containing endpoint (hostname) and description or agent_guid and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ip",
                        "mac address",
                        "host name",
                        "agent guid"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.endpoint_identifiers",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "mac address",
                        "host name",
                        "agent guid"
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "contains": [
                        "task status id"
                    ],
                    "data_type": "string",
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unquarantine device",
            "identifier": "unquarantine_device",
            "description": "Unquarantine the endpoint",
            "verbose": "Unquarantine the endpoint.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "endpoint_identifiers": {
                    "description": "Object containing endpoint (hostname) and description or agent_guid and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ip",
                        "mac address",
                        "host name",
                        "agent guid"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.endpoint_identifiers",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "mac address",
                        "host name",
                        "agent guid"
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "identifier": "on_poll",
            "description": "Callback action for the on_poll ingest functionality",
            "verbose": "Callback action for the on_poll ingest functionality.",
            "type": "ingest",
            "read_only": true,
            "parameters": {
                "starttime": {
                    "description": "Make sure time format matches following example. 2020-06-15T10:00:00Z",
                    "data_type": "string",
                    "order": 0,
                    "descriptionError": false
                },
                "endtime": {
                    "description": "Make sure time format matches following example. 2020-06-15T12:00:00Z",
                    "data_type": "string",
                    "order": 1,
                    "descriptionError": false
                }
            },
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "status check",
            "identifier": "status_check",
            "description": "Checks the status of a task",
            "verbose": "Checks the status of a particular task.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "task_id": {
                    "description": "ID of the task you would like to get the status of. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "task status id"
                    ],
                    "order": 0
                },
                "poll": {
                    "description": "If script should wait until the task is finished before returning the result, enabled by default",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        "true",
                        "false"
                    ],
                    "default": "true",
                    "order": 1
                },
                "poll_time_sec": {
                    "description": "Maximum time to wait for the result to be available",
                    "data_type": "numeric",
                    "default": 30,
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.poll",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.poll_time_sec",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.account",
                    "data_type": "string",
                    "column_name": "Account",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.action",
                    "data_type": "string",
                    "column_name": "Action",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.created_date_time",
                    "data_type": "string",
                    "column_name": "Created Date Time",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "column_name": "ID",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.last_action_date_time=",
                    "data_type": "string",
                    "column_name": "Last Action Date Time=",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add to blocklist",
            "identifier": "add_to_blocklist",
            "description": "Adds an item to the Suspicious Objects list in Vision One",
            "verbose": "Adds an item from the Trend Vision One Suspicious Objects list.",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "block_objects": {
                    "description": "Object made up of object_type (domain,ip,file_sha1,url,sender_mail_address), object_value and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.block_objects",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove from blocklist",
            "identifier": "remove_from_blocklist",
            "description": "Removes an item from the Suspicious Objects list",
            "verbose": "Removes an item from the Trend Vision One Suspicious Objects list.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "block_objects": {
                    "description": "Object made up of object_type (domain,ip,file_sha1,url,sender_mail_address), object_value and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.block_objects",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "quarantine email message",
            "identifier": "quarantine_email_message",
            "description": "Quarantine the email message",
            "verbose": "Retrieve data from the quarantine email message and send the result to dashboard.",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "email_identifiers": {
                    "description": "Email Message ID (<mailMsgId>), Mailbox ID and description or Unique Message ID (msgUuid) and description from Trend Vision One message activity data. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email_identifiers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete email message",
            "identifier": "delete_email_message",
            "description": "Delete the email message",
            "verbose": "Retrieve data from the delete email message and relay result to Splunk.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "email_identifiers": {
                    "description": "Email Message ID (<mailMsgId>), Mailbox ID and description or Unique Message ID (msgUuid) and description from Trend Vision One message activity data. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email_identifiers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "terminate process",
            "identifier": "terminate_process",
            "description": "Terminate the process running on the endpoint",
            "verbose": "Terminate the process running on the endpoint and send results to the dashboard.",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "process_identifiers": {
                    "description": "Object consisting of endpoint (hostname) or agent_guid, file_sha1, filename and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "host name",
                        "file sha1",
                        "file name"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.process_identifiers",
                    "data_type": "string",
                    "contains": [
                        "host name",
                        "file sha1",
                        "file name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add to exception",
            "identifier": "add_to_exception",
            "description": "Add object to exception list",
            "verbose": "Add the exception object to the exception list and send the result to Splunk.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "block_objects": {
                    "description": "Object consisting of object_type (domain,ip,url,file_sha1,file_sha256,sender_mail_address), object_value and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.block_objects",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.task_id",
                    "data_type": "string",
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.total_count",
                    "data_type": "numeric",
                    "column_name": "Total Count",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete from exception",
            "identifier": "delete_from_exception",
            "description": "Delete object from exception list",
            "verbose": "Delete the exception object from the exception list and relay data to Splunk.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "block_objects": {
                    "description": "Object consisting of object_type (domain,ip,url,file_sha1,file_sha256,sender_mail_address) and object_value. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.block_objects",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.task_id",
                    "data_type": "string",
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.total_count",
                    "data_type": "numeric",
                    "column_name": "Total Count",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add to suspicious",
            "identifier": "add_to_suspicious",
            "description": "Add suspicious object to suspicious list",
            "verbose": "Add suspicious object to suspicious list and send the result to dashboard.",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "block_objects": {
                    "description": "Object consisting of object_type (domain,ip,url,file_sha1,file_sha256,sender_mail_address), object_value and scan_action, risk_level, expiry_days and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.block_objects",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.total_count",
                    "data_type": "numeric",
                    "column_name": "Total Count",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete from suspicious",
            "identifier": "delete_from_suspicious",
            "description": "Delete the suspicious object from suspicious list",
            "verbose": "Delete the suspicious object from suspicious list and send the result to the dashboard.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "block_objects": {
                    "description": "Object consisting of object_type (domain,ip,url,file_sha1,file_sha256,sender_mail_address) and object_value. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.block_objects",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.multi_response.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.total_count",
                    "data_type": "numeric",
                    "column_name": "Total Count",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "check analysis status",
            "identifier": "check_analysis_status",
            "description": "Get the status of file analysis based on task id",
            "verbose": "Get the status of file analysis based on task id and send result to the dashboard.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "task_id": {
                    "description": "ID generated from the start_analysis action. Submission ID in Vision One. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "submit id",
                        "report id",
                        "task id"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.task_id",
                    "data_type": "string",
                    "contains": [
                        "submit id",
                        "report id",
                        "task id"
                    ],
                    "column_name": "ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.action",
                    "data_type": "string",
                    "column_name": "Action",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.arguments",
                    "data_type": "string",
                    "column_name": "Arguments",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.created_date_time",
                    "data_type": "string",
                    "column_name": "Created Date Time",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.digest",
                    "data_type": "string",
                    "column_name": "Digest",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.is_cached",
                    "data_type": "string",
                    "column_name": "Is Cached",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.last_action_date_time",
                    "data_type": "string",
                    "column_name": "Last Action Date Time",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.resource_location",
                    "data_type": "string",
                    "column_name": "Resource Location",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "download analysis report",
            "identifier": "download_analysis_report",
            "description": "Get the analysis report of a file based on report id",
            "verbose": "Get the analysis report of a file based on report id and send the results to the dashboard.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "submit_id": {
                    "description": "ID of the sandbox submission retrieved from check_analysis_status action. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "contains": [
                        "submit id"
                    ]
                },
                "poll": {
                    "description": "If script should wait until the task is finished before returning the result, enabled by default",
                    "data_type": "string",
                    "value_list": [
                        "true",
                        "false"
                    ],
                    "default": "true",
                    "order": 1
                },
                "poll_time_sec": {
                    "description": "Maximum time to wait for the result to be available",
                    "data_type": "numeric",
                    "default": 30,
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.poll",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.poll_time_sec",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.submit_id",
                    "data_type": "string",
                    "contains": [
                        "submit id"
                    ],
                    "column_name": "Submit ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.file_added",
                    "data_type": "string",
                    "column_name": "File Added",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "collect forensic file",
            "identifier": "collect_forensic_file",
            "description": "Collect forensic file",
            "verbose": "Collect forensic file and send result to the dashboard.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "collect_files": {
                    "description": "Object containing endpoint (hostname) or agent_guid, file_path and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "host name",
                        "agent guid",
                        "file path",
                        "description"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.collect_files",
                    "data_type": "string",
                    "contains": [
                        "host name",
                        "agent guid",
                        "file path",
                        "description"
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "forensic id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "forensic file info",
            "identifier": "forensic_file_info",
            "description": "Get the download information for collected forensic file",
            "verbose": "Get the download information for collected forensic file and send the result to the dashboard.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "task_id": {
                    "description": "Task ID output from collect_forensic_file action. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "contains": [
                        "forensic id"
                    ]
                },
                "poll": {
                    "description": "If script should wait until the task is finished before returning the result, enabled by default",
                    "data_type": "string",
                    "value_list": [
                        "true",
                        "false"
                    ],
                    "default": "true",
                    "order": 1
                },
                "poll_time_sec": {
                    "description": "Maximum time to wait for the result to be available",
                    "data_type": "numeric",
                    "default": 30,
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.poll",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.poll_time_sec",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.task_id",
                    "data_type": "string",
                    "contains": [
                        "forensic id"
                    ],
                    "column_order": 0,
                    "column_name": "Task ID"
                },
                {
                    "data_path": "action_result.data.*.account",
                    "data_type": "string",
                    "column_name": "Account",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.action",
                    "data_type": "string",
                    "column_name": "Action",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.agent_guid",
                    "data_type": "string",
                    "column_name": "Agent Guid",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.created_date_time",
                    "data_type": "string",
                    "column_name": "Created Date Time",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.endpoint_name",
                    "data_type": "string",
                    "column_name": "Endpoint Name",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.error",
                    "data_type": "string",
                    "column_name": "Error",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.expired_date_time",
                    "data_type": "string",
                    "column_name": "Expired Date Time",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.data.*.file_path",
                    "data_type": "string",
                    "column_name": "File Path",
                    "column_order": 9
                },
                {
                    "data_path": "action_result.data.*.file_sha1",
                    "data_type": "string",
                    "column_name": "File SHA1",
                    "column_order": 10
                },
                {
                    "data_path": "action_result.data.*.file_sha256",
                    "data_type": "string",
                    "column_name": "File SHA256",
                    "column_order": 11
                },
                {
                    "data_path": "action_result.data.*.file_size",
                    "data_type": "string",
                    "column_name": "File Size",
                    "column_order": 12
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "column_name": "ID",
                    "column_order": 13
                },
                {
                    "data_path": "action_result.data.*.last_action_date_time",
                    "data_type": "string",
                    "column_name": "Last Action Date Time",
                    "column_order": 14
                },
                {
                    "data_path": "action_result.data.*.password",
                    "data_type": "string",
                    "column_name": "Password",
                    "column_order": 15
                },
                {
                    "data_path": "action_result.data.*.resource_location",
                    "data_type": "string",
                    "column_name": "Resource Location",
                    "column_order": 16
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 17
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "start analysis",
            "identifier": "start_analysis",
            "description": "Submit file to sandbox for analysis",
            "verbose": "Submit file to sandbox for analysis and send the result to the dashboard.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "file_url": {
                    "description": "URL pointing to the location of the file to be submitted. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "contains": [
                        "file url"
                    ]
                },
                "file_name": {
                    "description": "Name of the file to be analyzed. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "document_pass": {
                    "description": "The password for decrypting the submitted document. The value must be Base64-encoded. The maximum password length is 128 bytes prior to encoding. (Optional)",
                    "data_type": "string",
                    "order": 2
                },
                "archive_pass": {
                    "description": "The password for decrypting the submitted archive. The value must be Base64-encoded. The maximum password length is 128 bytes prior to encoding. (Optional)",
                    "data_type": "string",
                    "order": 3
                },
                "arguments": {
                    "description": "Parameter that allows you to specify Base64-encoded command line arguments to run the submitted file. The maximum argument length before encoding is 1024 bytes. Arguments are only available for Portable Executable (PE) files and script files. (Optional)",
                    "data_type": "string",
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.archive_pass",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.arguments",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.document_pass",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.file_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.file_url",
                    "data_type": "string",
                    "contains": [
                        "file url"
                    ]
                },
                {
                    "data_path": "action_result.data.*.arguments",
                    "data_type": "string",
                    "column_name": "Arguments",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.digest",
                    "data_type": "string",
                    "column_name": "Digest",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.id",
                    "contains": [
                        "task id"
                    ],
                    "data_type": "string",
                    "column_name": "ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add note",
            "identifier": "add_note",
            "description": "Adds a note to an existing workbench alert",
            "verbose": "Adds a note to an existing workbench alert in Trend Vision One.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "workbench_id": {
                    "description": "Workbench id of security incident in Vision One. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "workbench id"
                    ],
                    "order": 0
                },
                "content": {
                    "description": "Note to be added to workbench event. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.content",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.workbench_id",
                    "data_type": "string",
                    "contains": [
                        "workbench id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.note_id",
                    "data_type": "string",
                    "contains": [
                        "note id"
                    ],
                    "column_name": "Note ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "update status",
            "identifier": "update_status",
            "description": "Updates the status of an existing workbench alert",
            "verbose": "Updates the status of an existing workbench alert in Trend Vision One.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "workbench_id": {
                    "description": "The ID of the workbench alert that you would like to update the status for. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "workbench id"
                    ],
                    "order": 0
                },
                "status": {
                    "description": "The status to assign to the workbench alert: new, in_progress, true_positive, false_positive, benign_true_positive, closed. (Required)",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        "new",
                        "in_progress",
                        "true_positive",
                        "false_positive",
                        "benign_true_positive",
                        "closed"
                    ],
                    "order": 1
                },
                "if_match": {
                    "description": "Target resource will be updated only if it matches ETag of the target one. Etag is one of the outputs from get_alert_details. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "etag"
                    ],
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.if_match",
                    "data_type": "string",
                    "contains": [
                        "etag"
                    ]
                },
                {
                    "data_path": "action_result.parameter.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.workbench_id",
                    "data_type": "string",
                    "contains": [
                        "workbench id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get alert details",
            "identifier": "get_alert_details",
            "description": "Displays information about the specified alert",
            "verbose": "Displays information about the specified alert.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "workbench_id": {
                    "description": "ID of the workbench alert you would like to get the details for. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "contains": [
                        "workbench id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.workbench_id",
                    "data_type": "string",
                    "contains": [
                        "workbench id"
                    ],
                    "column_name": "Workbench ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.alert",
                    "data_type": "string",
                    "column_name": "Alert",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.etag",
                    "data_type": "string",
                    "contains": [
                        "etag"
                    ],
                    "column_name": "Etag",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "urls to sandbox",
            "identifier": "urls_to_sandbox",
            "description": "Submits URLs to the sandbox for analysis",
            "verbose": "Submits URLs to the sandbox for analysis. You can submit a maximum of 10 URLs per request. For more information about the supported URL format, see https://docs.trendmicro.com/en-us/enterprise/trend-micro-xdr-help/SandboxAnalysis.\nNote: Using Sandbox Analysis requires credits.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "urls": {
                    "description": "List of URLs to be sent to sandbox for analysis. Note: You can submit a maximum of 10 URLs per request. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.urls",
                    "data_type": "string",
                    "column_name": "Urls",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.digest",
                    "data_type": "string",
                    "column_name": "Digest",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "column_name": "ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "submit id",
                        "report id",
                        "task id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.url",
                    "data_type": "string",
                    "column_name": "URL",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "enable account",
            "identifier": "enable_account",
            "description": "Allows the user to sign in to new application and browser sessions",
            "verbose": "Allows the user to sign in to new application and browser sessions.\nSupported IAM systems:\nAzure AD\nActive Directory (on-premises).",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "account_identifiers": {
                    "description": "Object containing account_name and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.account_identifiers",
                    "data_type": "string",
                    "column_name": "Account Identifiers",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "disable account",
            "identifier": "disable_account",
            "description": "Signs the user out of all active application and browser sessions, and prevents the user from signing in any new session",
            "verbose": "Signs the user out of all active application and browser sessions, and prevents the user from signing in any new session.\nSupported IAM systems:\nAzure AD\nActive Directory (on-premises).",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "account_identifiers": {
                    "description": "Object containing account_name and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.account_identifiers",
                    "data_type": "string",
                    "column_name": "Account Identifiers",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "restore email message",
            "identifier": "restore_email_message",
            "description": "Restore quarantined email messages",
            "verbose": "Restore quarantined email messages\n\nAccount role permissions required:\nResponse Management\nView, filter, and search (Task List tab)\nQuarantine/Restore messages.",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "email_identifiers": {
                    "description": "Email Message ID (<mailMsgId>), Mailbox ID and description or Unique Message ID (msgUuid) and description from Trend Vision One message activity data. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email_identifiers",
                    "data_type": "string",
                    "column_name": "Email Identifiers",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "sign out account",
            "identifier": "sign_out_account",
            "description": "Signs the user out of all active application and browser sessions",
            "verbose": "Signs the user out of all active application and browser sessions.\nSupported IAM systems:\nAzure AD.",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "account_identifiers": {
                    "description": "Object containing account_name and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.account_identifiers",
                    "data_type": "string",
                    "column_name": "Account Identifiers",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "force password reset",
            "identifier": "force_password_reset",
            "description": "Signs the user out of all active application and browser sessions, and forces the user to create a new password during the next sign-in attempt",
            "verbose": "Signs the user out of all active application and browser sessions, and forces the user to create a new password during the next sign-in attempt.\nSupported IAM systems:\nAzure AD\nActive Directory (on-premises).",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "account_identifiers": {
                    "description": "Object containing account_name and description. (Required)",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.account_identifiers",
                    "data_type": "string",
                    "column_name": "Account Identifiers",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "numeric",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.task_id",
                    "data_type": "string",
                    "contains": [
                        "task status id"
                    ],
                    "column_name": "Task ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "sandbox suspicious list",
            "identifier": "sandbox_suspicious_list",
            "description": "Downloads the suspicious object list associated to the specified object",
            "verbose": "Downloads the suspicious object list associated to the specified object. Note: Suspicious Object Lists are only available for objects with a high risk level.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "submit_id": {
                    "description": "Unique alphanumeric string that identifies the analysis results of a submission. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "contains": [
                        "submit id"
                    ]
                },
                "poll": {
                    "description": "If script should wait until the task is finished before returning the result, enabled by default",
                    "data_type": "string",
                    "value_list": [
                        "true",
                        "false"
                    ],
                    "default": "true",
                    "order": 1
                },
                "poll_time_sec": {
                    "description": "Maximum time to wait for the result to be available",
                    "data_type": "numeric",
                    "default": 30,
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.poll",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.poll_time_sec",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.submit_id",
                    "data_type": "string",
                    "contains": [
                        "submit id"
                    ],
                    "column_name": "Submit ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.analysis_completion_date_time",
                    "data_type": "string",
                    "column_name": "Analysis Completion Date Time",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.expired_date_time",
                    "data_type": "string",
                    "column_name": "Expired Date Time",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.risk_level",
                    "data_type": "string",
                    "column_name": "Risk Level",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.root_sha1",
                    "data_type": "string",
                    "contains": [
                        "file sha1"
                    ],
                    "column_name": "Root SHA1",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "column_name": "Type",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.value",
                    "data_type": "string",
                    "column_name": "Value",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "sandbox analysis result",
            "identifier": "sandbox_analysis_result",
            "description": "Displays the analysis results of the specified object",
            "verbose": "Displays the analysis results of the specified object.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "report_id": {
                    "description": "Unique alphanumeric string that identifies the analysis results of a submission. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "contains": [
                        "report id"
                    ]
                },
                "poll": {
                    "description": "If script should wait until the task is finished before returning the result, enabled by default",
                    "data_type": "string",
                    "value_list": [
                        "true",
                        "false"
                    ],
                    "default": "true",
                    "order": 1
                },
                "poll_time_sec": {
                    "description": "Maximum time to wait for the result to be available",
                    "data_type": "numeric",
                    "default": 30,
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.poll",
                    "data_type": "string",
                    "column_name": "Poll",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.poll_time_sec",
                    "data_type": "numeric",
                    "column_name": "Poll Time Sec",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.report_id",
                    "data_type": "string",
                    "column_name": "Report ID",
                    "column_order": 3,
                    "contains": [
                        "report id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.analysis_completion_date_time",
                    "data_type": "string",
                    "column_name": "Analysis Completion Date Time",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.arguments",
                    "data_type": "string",
                    "column_name": "Arguments",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.digest",
                    "data_type": "string",
                    "column_name": "Digest",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.id",
                    "contains": [
                        "report id",
                        "submit id"
                    ],
                    "data_type": "string",
                    "column_name": "ID",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.risk_level",
                    "data_type": "string",
                    "column_name": "Risk Level",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.data.*.true_file_type",
                    "data_type": "string",
                    "column_name": "True File Type",
                    "column_order": 9
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "column_name": "Type",
                    "column_order": 10
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "sandbox investigation package",
            "identifier": "sandbox_investigation_package",
            "description": "Downloads the Investigation Package of the specified object",
            "verbose": "Downloads the Investigation Package of the specified object using the unique alphanumeric string that identifies the analysis results of a submission.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "submit_id": {
                    "description": "Unique alphanumeric string that identifies the analysis results of a submission. (Required)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "submit id"
                    ],
                    "order": 0
                },
                "poll": {
                    "description": "If script should wait until the task is finished before returning the result, enabled by default",
                    "data_type": "string",
                    "value_list": [
                        "true",
                        "false"
                    ],
                    "default": "true",
                    "order": 1
                },
                "poll_time_sec": {
                    "description": "Maximum time to wait for the result to be available",
                    "data_type": "numeric",
                    "default": 30,
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.poll",
                    "data_type": "string",
                    "column_name": "Poll",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.poll_time_sec",
                    "data_type": "numeric",
                    "column_name": "Poll Time Sec",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.submit_id",
                    "data_type": "string",
                    "column_name": "Submit ID",
                    "column_order": 3,
                    "contains": [
                        "submit id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file_added",
                    "data_type": "string",
                    "column_name": "File Added",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get suspicious list",
            "identifier": "get_suspicious_list",
            "description": "Retrieves information about domains, file SHA-1, file SHA-256, IP addresses, email addresses, or URLs in the Suspicious Object List and displays the information in a paginated list",
            "verbose": "Retrieves information about domains, file SHA-1, file SHA-256, IP addresses, email addresses, or URLs in the Suspicious Object List and displays the information in a paginated list.",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.expired_date_time",
                    "data_type": "string",
                    "column_name": "Expired Date Time",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.in_exception_list",
                    "data_type": "string",
                    "column_name": "In Exception List",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.last_modified_date_time",
                    "data_type": "string",
                    "column_name": "Last Modified Date Time",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.risk_level",
                    "data_type": "string",
                    "column_name": "Risk Level",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.scan_action",
                    "data_type": "string",
                    "column_name": "Scan Action",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "column_name": "Type",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.value",
                    "data_type": "string",
                    "column_name": "Value",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get exception list",
            "identifier": "get_exception_list",
            "description": "Retrieves information about domains, file SHA-1, file SHA-256, IP addresses, sender addresses, or URLs in the Exception List and displays it in a paginated list",
            "verbose": "Retrieves information about domains, file SHA-1, file SHA-256, IP addresses, sender addresses, or URLs in the Exception List and displays it in a paginated list.",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.last_modified_date_time",
                    "data_type": "string",
                    "column_name": "Last Modified Date Time",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "column_name": "Type",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.value",
                    "data_type": "string",
                    "column_name": "Value",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.10.0-py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/shared/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.3.2.post1-py3-none-any.whl"
            },
            {
                "module": "pytmv1",
                "input_file": "wheels/py3/pytmv1-0.6.2-py3-none-any.whl"
            }
        ]
    },
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.11.2-py3-none-any.whl"
            },
            {
                "module": "charset_normalizer",
                "input_file": "wheels/py3/charset_normalizer-2.0.12-py3-none-any.whl"
            },
            {
                "module": "pydantic",
                "input_file": "wheels/py39/pydantic-1.10.13-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            },
            {
                "module": "pytmv1",
                "input_file": "wheels/py3/pytmv1-0.6.2-py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.5-py3-none-any.whl"
            },
            {
                "module": "typing_extensions",
                "input_file": "wheels/py3/typing_extensions-4.8.0-py3-none-any.whl"
            }
        ]
    }
}
